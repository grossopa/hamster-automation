<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.hamster</groupId>
  <artifactId>hamster-automation</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>Hamster Web Automation Solution</name>
  <packaging>pom</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>

    <cucumber.version>1.2.5</cucumber.version>
    <logback.version>1.2.3</logback.version>
    <junit.version>4.12</junit.version>
    <selenium.version>3.7.1</selenium.version>
    <selenium-cucumber-java.version>1.0.0</selenium-cucumber-java.version>
    <slf4j.version>1.7.25</slf4j.version>
    <spring.version>4.3.13.RELEASE</spring.version>
    <testng.version>6.11</testng.version>

    <sonar.jacoco.reportPath>target/sonar-jacoco</sonar.jacoco.reportPath>
    <jacoco-maven-plugin.version>0.8.0</jacoco-maven-plugin.version>
    <maven-cobertura-plugin.version>1.4</maven-cobertura-plugin.version>
    <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- modules -->
      <dependency>
        <groupId>org.hamster</groupId>
        <artifactId>hamster-automation-core</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-java</artifactId>
        <version>${selenium.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-server</artifactId>
        <version>${selenium.version}</version>
      </dependency>

      <!-- Cucumber -->
      <dependency>
        <groupId>info.cukes</groupId>
        <artifactId>cucumber-java</artifactId>
        <version>${cucumber.version}</version>
      </dependency>

      <!-- Cucumber JUnit Integration -->
      <dependency>
        <groupId>info.cukes</groupId>
        <artifactId>cucumber-junit</artifactId>
        <version>${cucumber.version}</version>
      </dependency>

      <dependency>
        <groupId>info.cukes</groupId>
        <artifactId>cucumber-spring</artifactId>
        <version>${cucumber.version}</version>
      </dependency>

      <!-- JUnit -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <!-- utils -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>
  


  <build>
    <pluginManagement>
      <plugins>
        <!-- code coverage -->
        <plugin>
          <groupId>maven-plugins</groupId>
          <artifactId>maven-cobertura-plugin</artifactId>
          <version>${maven-cobertura-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <configuration>
            <destFile>${sonar.jacoco.reportPath}</destFile>
            <append>true</append>
          </configuration>
          <executions>
            <!-- Prepares the property pointing to the JaCoCo runtime agent which is passed as VM argument when Maven the 
              Surefire plugin is executed. -->
            <execution>
              <id>pre-unit-test</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run. -->
            <execution>
              <id>post-unit-test</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <modules>
    <module>hamster-automation-core</module>
    <module>hamster-automation-react</module>
    <module>hamster-automation-react-test</module>
  </modules>

</project>